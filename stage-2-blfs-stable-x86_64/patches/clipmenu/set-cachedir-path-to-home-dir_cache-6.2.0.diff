diff -U 1 -ru clipmenu-6.2.0_orig/clipmenu clipmenu-6.2.0/clipmenu
--- clipmenu-6.2.0_orig/clipmenu	2020-10-14 17:13:09.000000000 +0400
+++ clipmenu-6.2.0/clipmenu	2022-04-04 14:22:15.250373488 +0400
@@ -1,14 +1,13 @@
 #!/usr/bin/env bash
 
 : "${CM_LAUNCHER=dmenu}"
-: "${CM_DIR="${XDG_RUNTIME_DIR-"${TMPDIR-/tmp}"}"}"
 : "${CM_HISTLENGTH=8}"
 
 major_version=6
 
 shopt -s nullglob
 
-cache_dir=$CM_DIR/clipmenu.$major_version.$USER
+cache_dir=$HOME/.cache/clipmenu/
 cache_file=$cache_dir/line_cache
 
 if [[ $1 == --help ]] || [[ $1 == -h ]]; then
@@ -20,7 +19,6 @@
 
 Environment variables:
 
-- $CM_DIR: specify the base directory to store the cache dir in (default: $XDG_RUNTIME_DIR, $TMPDIR, or /tmp)
 - $CM_HISTLENGTH: specify the number of lines to show in dmenu/rofi (default: 8)
 - $CM_LAUNCHER: specify a dmenu-compatible launcher (default: dmenu)
 - $CM_OUTPUT_CLIP: if set, output clip selection to stdout
diff -U 1 -ru clipmenu-6.2.0_orig/clipmenud clipmenu-6.2.0/clipmenud
--- clipmenu-6.2.0_orig/clipmenud	2020-10-14 17:13:09.000000000 +0400
+++ clipmenu-6.2.0/clipmenud	2022-04-04 14:22:15.250373488 +0400
@@ -3,7 +3,6 @@
 : "${CM_ONESHOT=0}"
 : "${CM_OWN_CLIPBOARD=0}"
 : "${CM_DEBUG=0}"
-: "${CM_DIR:="${XDG_RUNTIME_DIR-"${TMPDIR-/tmp}"}"}"
 
 : "${CM_MAX_CLIPS:=1000}"
 # Buffer to batch to avoid calling too much. Only used if CM_MAX_CLIPS >0.
@@ -13,7 +12,7 @@
 read -r -a selections <<< "$CM_SELECTIONS"
 
 major_version=6
-cache_dir=$CM_DIR/clipmenu.$major_version.$USER/
+cache_dir=$HOME/.cache/clipmenu/
 cache_file=$cache_dir/line_cache
 
 # lock_file: lock for *one* iteration of clipboard capture/propagation
@@ -99,7 +98,6 @@
 Environment variables:
 
 - $CM_DEBUG: turn on debugging output (default: 0)
-- $CM_DIR: specify the base directory to store the cache dir in (default: $XDG_RUNTIME_DIR, $TMPDIR, or /tmp)
 - $CM_MAX_CLIPS: soft maximum number of clips to store, 0 for inf. At $CM_MAX_CLIPS + 10, the number of clips is reduced to $CM_MAX_CLIPS (default: 1000)
 - $CM_ONESHOT: run once immediately, do not loop (default: 0)
 - $CM_OWN_CLIPBOARD: take ownership of the clipboard. Note: this may cause missed copies if some other application also handles the clipboard directly (default: 0)
